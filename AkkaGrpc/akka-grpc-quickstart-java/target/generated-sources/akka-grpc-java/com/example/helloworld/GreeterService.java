
// Generated by Akka gRPC. DO NOT EDIT.
package com.example.helloworld;

import akka.grpc.ProtobufSerializer;
import akka.grpc.javadsl.GoogleProtobufSerializer;

import akka.grpc.AkkaGrpcGenerated;

/**
 * The greeting service definition.
 */
public interface GreeterService {
  
  /**
   * Sends a greeting
   */
  java.util.concurrent.CompletionStage<com.example.helloworld.HelloReply> sayHello(com.example.helloworld.HelloRequest in);
  
  /**
   * #service-request-reply
   * #service-stream
   * The stream of incoming HelloRequest messages are
   * sent out as corresponding HelloReply. From
   * all clients to all clients, like a chat room.
   */
  akka.stream.javadsl.Source<com.example.helloworld.HelloReply, akka.NotUsed> sayHelloToAll(akka.stream.javadsl.Source<com.example.helloworld.HelloRequest, akka.NotUsed> in);
  

  static String name = "GreeterService";
  static akka.grpc.ServiceDescription description = new akka.grpc.internal.ServiceDescriptionImpl(name, HelloWorldProto.getDescriptor());

  @AkkaGrpcGenerated
  public static class Serializers {
    
      public static ProtobufSerializer<com.example.helloworld.HelloRequest> HelloRequestSerializer = new GoogleProtobufSerializer<>(com.example.helloworld.HelloRequest.parser());
    
      public static ProtobufSerializer<com.example.helloworld.HelloReply> HelloReplySerializer = new GoogleProtobufSerializer<>(com.example.helloworld.HelloReply.parser());
    
  }
}
